/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("accD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("accD[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("accD[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("accD[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("accD[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("accD[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("accD[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("accD[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("accD[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "accD";
}

SIGNAL("dBus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dBus[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("dBus[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("dBus[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("dBus[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("dBus[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("dBus[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("dBus[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("dBus[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dBus";
}

SIGNAL("en_Add")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("en_And")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("en_Not")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("en_Or")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("en_Sub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

TRANSITION_LIST("accD[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("accD[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("accD[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
		}
	}
}

TRANSITION_LIST("accD[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("accD[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("accD[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("accD[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("accD[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("dBus[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("dBus[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
		}
	}
}

TRANSITION_LIST("dBus[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("dBus[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
	}
}

TRANSITION_LIST("dBus[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
	}
}

TRANSITION_LIST("dBus[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("dBus[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("dBus[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("en_Add")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 800.0;
		}
	}
}

TRANSITION_LIST("en_And")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 230.0;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 630.0;
		}
	}
}

TRANSITION_LIST("en_Not")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 500.0;
		}
	}
}

TRANSITION_LIST("en_Or")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 520.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 360.0;
		}
	}
}

TRANSITION_LIST("en_Sub")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 660.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 170.0;
		}
	}
}

TRANSITION_LIST("q[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.62;
			LEVEL X FOR 44.788;
			LEVEL 0 FOR 0.685;
			LEVEL 1 FOR 0.892;
			LEVEL 0 FOR 0.033;
			LEVEL 1 FOR 0.834;
			LEVEL 0 FOR 0.426;
			LEVEL 1 FOR 9.473;
			LEVEL 0 FOR 0.919;
			LEVEL 1 FOR 0.067;
			LEVEL 0 FOR 0.496;
			LEVEL 1 FOR 8.196;
			LEVEL 0 FOR 0.849;
			LEVEL 1 FOR 9.574;
			LEVEL 0 FOR 0.547;
			LEVEL 1 FOR 9.03;
			LEVEL 0 FOR 10.403;
			LEVEL 1 FOR 0.905;
			LEVEL 0 FOR 0.287;
			LEVEL 1 FOR 9.378;
			LEVEL 0 FOR 0.831;
			LEVEL 1 FOR 0.803;
			LEVEL 0 FOR 7.712;
			LEVEL 1 FOR 0.556;
			LEVEL 0 FOR 9.105;
			LEVEL 1 FOR 0.904;
			LEVEL 0 FOR 0.398;
			LEVEL 1 FOR 19.141;
			LEVEL 0 FOR 0.067;
			LEVEL 1 FOR 0.385;
			LEVEL 0 FOR 0.366;
			LEVEL 1 FOR 0.357;
			LEVEL 0 FOR 8.382;
			LEVEL 1 FOR 1.072;
			LEVEL 0 FOR 0.752;
			LEVEL 1 FOR 8.619;
			LEVEL 0 FOR 10.859;
			LEVEL 1 FOR 0.139;
			LEVEL 0 FOR 8.559;
			LEVEL 1 FOR 0.895;
			LEVEL 0 FOR 9.615;
			LEVEL 1 FOR 41.35;
			LEVEL 0 FOR 7.961;
			LEVEL 1 FOR 0.131;
			LEVEL 0 FOR 9.567;
			LEVEL 1 FOR 10.712;
			LEVEL 0 FOR 19.59;
			LEVEL 1 FOR 0.131;
			LEVEL 0 FOR 19.567;
			LEVEL 1 FOR 10.712;
			LEVEL 0 FOR 9.59;
			LEVEL 1 FOR 0.131;
			LEVEL 0 FOR 49.567;
			LEVEL 1 FOR 0.712;
			LEVEL 0 FOR 20.004;
			LEVEL 1 FOR 9.582;
			LEVEL 0 FOR 30.418;
			LEVEL 1 FOR 29.582;
			LEVEL 0 FOR 30.418;
			LEVEL 1 FOR 9.582;
			LEVEL 0 FOR 20.395;
			LEVEL 1 FOR 1.109;
			LEVEL 0 FOR 8.5;
			LEVEL 1 FOR 10.41;
			LEVEL 0 FOR 39.288;
			LEVEL 1 FOR 80.684;
			LEVEL 0 FOR 0.359;
			LEVEL 1 FOR 1.218;
			LEVEL 0 FOR 0.527;
			LEVEL 1 FOR 8.592;
			LEVEL 0 FOR 9.524;
			LEVEL 1 FOR 0.481;
			LEVEL 0 FOR 9.096;
			LEVEL 1 FOR 1.324;
			LEVEL 0 FOR 11.451;
			LEVEL 1 FOR 18.297;
			LEVEL 0 FOR 9.267;
			LEVEL 1 FOR 0.104;
			LEVEL 0 FOR 1.294;
			LEVEL 1 FOR 0.573;
			LEVEL 0 FOR 8.563;
			LEVEL 1 FOR 10.867;
			LEVEL 0 FOR 8.26;
			LEVEL 1 FOR 1.324;
			LEVEL 0 FOR 19.099;
			LEVEL 1 FOR 9.597;
			LEVEL 0 FOR 0.319;
			LEVEL 1 FOR 0.56;
			LEVEL 0 FOR 10.399;
			LEVEL 1 FOR 9.145;
			LEVEL 0 FOR 1.27;
			LEVEL 1 FOR 1.065;
			LEVEL 0 FOR 8.291;
			LEVEL 1 FOR 0.256;
			LEVEL 0 FOR 9.214;
			LEVEL 1 FOR 0.131;
			LEVEL 0 FOR 0.446;
			LEVEL 1 FOR 0.185;
			LEVEL 0 FOR 0.392;
			LEVEL 1 FOR 0.239;
			LEVEL 0 FOR 0.236;
			LEVEL 1 FOR 0.395;
			LEVEL 0 FOR 0.182;
			LEVEL 1 FOR 0.449;
			LEVEL 0 FOR 0.128;
			LEVEL 1 FOR 0.503;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.557;
			LEVEL 0 FOR 0.02;
			LEVEL 1 FOR 155.115;
		}
	}
}

TRANSITION_LIST("q[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.392;
			LEVEL X FOR 44.815;
			LEVEL 1 FOR 0.512;
			LEVEL 0 FOR 0.993;
			LEVEL 1 FOR 0.161;
			LEVEL 0 FOR 0.919;
			LEVEL 1 FOR 9.487;
			LEVEL 0 FOR 1.264;
			LEVEL 1 FOR 0.545;
			LEVEL 0 FOR 9.438;
			LEVEL 1 FOR 9.187;
			LEVEL 0 FOR 0.559;
			LEVEL 1 FOR 0.722;
			LEVEL 0 FOR 8.959;
			LEVEL 1 FOR 1.935;
			LEVEL 0 FOR 7.904;
			LEVEL 1 FOR 0.76;
			LEVEL 0 FOR 9.72;
			LEVEL 1 FOR 0.816;
			LEVEL 0 FOR 0.818;
			LEVEL 1 FOR 7.373;
			LEVEL 0 FOR 0.73;
			LEVEL 1 FOR 0.486;
			LEVEL 0 FOR 9.21;
			LEVEL 1 FOR 11.289;
			LEVEL 0 FOR 8.277;
			LEVEL 1 FOR 0.503;
			LEVEL 0 FOR 0.769;
			LEVEL 1 FOR 0.009;
			LEVEL 0 FOR 0.399;
			LEVEL 1 FOR 8.762;
			LEVEL 0 FOR 0.638;
			LEVEL 1 FOR 0.737;
			LEVEL 0 FOR 8.183;
			LEVEL 1 FOR 2.189;
			LEVEL 0 FOR 8.245;
			LEVEL 1 FOR 0.23;
			LEVEL 0 FOR 0.785;
			LEVEL 1 FOR 0.274;
			LEVEL 0 FOR 18.277;
			LEVEL 1 FOR 0.503;
			LEVEL 0 FOR 0.752;
			LEVEL 1 FOR 0.176;
			LEVEL 0 FOR 0.404;
			LEVEL 1 FOR 38.262;
			LEVEL 0 FOR 9.861;
			LEVEL 1 FOR 10.143;
			LEVEL 0 FOR 69.857;
			LEVEL 1 FOR 0.143;
			LEVEL 0 FOR 19.585;
			LEVEL 1 FOR 0.728;
			LEVEL 0 FOR 9.544;
			LEVEL 1 FOR 0.143;
			LEVEL 0 FOR 19.857;
			LEVEL 1 FOR 19.717;
			LEVEL 0 FOR 20.437;
			LEVEL 1 FOR 9.563;
			LEVEL 0 FOR 10.437;
			LEVEL 1 FOR 19.563;
			LEVEL 0 FOR 20.437;
			LEVEL 1 FOR 29.563;
			LEVEL 0 FOR 21.405;
			LEVEL 1 FOR 19.021;
			LEVEL 0 FOR 19.585;
			LEVEL 1 FOR 70.415;
			LEVEL 0 FOR 9.585;
			LEVEL 1 FOR 20.64;
			LEVEL 0 FOR 1.403;
			LEVEL 1 FOR 0.571;
			LEVEL 0 FOR 7.7;
			LEVEL 1 FOR 1.282;
			LEVEL 0 FOR 9.152;
			LEVEL 1 FOR 10.549;
			LEVEL 0 FOR 0.713;
			LEVEL 1 FOR 11.072;
			LEVEL 0 FOR 7.232;
			LEVEL 1 FOR 10.442;
			LEVEL 0 FOR 0.638;
			LEVEL 1 FOR 8.928;
			LEVEL 0 FOR 1.248;
			LEVEL 1 FOR 1.044;
			LEVEL 0 FOR 9.396;
			LEVEL 1 FOR 9.287;
			LEVEL 0 FOR 0.273;
			LEVEL 1 FOR 19.186;
			LEVEL 0 FOR 0.24;
			LEVEL 1 FOR 19.326;
			LEVEL 0 FOR 1.688;
			LEVEL 1 FOR 9.189;
			LEVEL 0 FOR 0.929;
			LEVEL 1 FOR 8.628;
			LEVEL 0 FOR 1.282;
			LEVEL 1 FOR 1.044;
			LEVEL 0 FOR 8.312;
			LEVEL 1 FOR 0.235;
			LEVEL 0 FOR 9.176;
			LEVEL 1 FOR 0.062;
			LEVEL 0 FOR 0.518;
			LEVEL 1 FOR 0.12;
			LEVEL 0 FOR 0.46;
			LEVEL 1 FOR 0.178;
			LEVEL 0 FOR 0.402;
			LEVEL 1 FOR 0.236;
			LEVEL 0 FOR 0.344;
			LEVEL 1 FOR 0.294;
			LEVEL 0 FOR 0.286;
			LEVEL 1 FOR 0.352;
			LEVEL 0 FOR 0.228;
			LEVEL 1 FOR 0.41;
			LEVEL 0 FOR 0.17;
			LEVEL 1 FOR 0.468;
			LEVEL 0 FOR 0.112;
			LEVEL 1 FOR 0.526;
			LEVEL 0 FOR 0.054;
			LEVEL 1 FOR 154.018;
		}
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.339;
			LEVEL X FOR 44.913;
			LEVEL 0 FOR 0.38;
			LEVEL 1 FOR 2.233;
			LEVEL 0 FOR 10.751;
			LEVEL 1 FOR 0.116;
			LEVEL 0 FOR 1.456;
			LEVEL 1 FOR 9.037;
			LEVEL 0 FOR 8.749;
			LEVEL 1 FOR 9.596;
			LEVEL 0 FOR 2.409;
			LEVEL 1 FOR 7.886;
			LEVEL 0 FOR 10.109;
			LEVEL 1 FOR 0.758;
			LEVEL 0 FOR 1.247;
			LEVEL 1 FOR 8.103;
			LEVEL 0 FOR 0.38;
			LEVEL 1 FOR 10.763;
			LEVEL 0 FOR 18.302;
			LEVEL 1 FOR 0.287;
			LEVEL 0 FOR 0.802;
			LEVEL 1 FOR 0.287;
			LEVEL 0 FOR 9.521;
			LEVEL 1 FOR 0.287;
			LEVEL 0 FOR 9.154;
			LEVEL 1 FOR 0.152;
			LEVEL 0 FOR 1.178;
			LEVEL 1 FOR 8.375;
			LEVEL 0 FOR 1.223;
			LEVEL 1 FOR 9.224;
			LEVEL 0 FOR 0.259;
			LEVEL 1 FOR 0.082;
			LEVEL 0 FOR 9.169;
			LEVEL 1 FOR 0.287;
			LEVEL 0 FOR 57.743;
			LEVEL 1 FOR 1.562;
			LEVEL 0 FOR 18.438;
			LEVEL 1 FOR 1.562;
			LEVEL 0 FOR 48.438;
			LEVEL 1 FOR 10.513;
			LEVEL 0 FOR 19.487;
			LEVEL 1 FOR 1.562;
			LEVEL 0 FOR 19.552;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 40.444;
			LEVEL 1 FOR 9.556;
			LEVEL 0 FOR 20.444;
			LEVEL 1 FOR 9.556;
			LEVEL 0 FOR 20.444;
			LEVEL 1 FOR 30.356;
			LEVEL 0 FOR 0.38;
			LEVEL 1 FOR 9.266;
			LEVEL 0 FOR 19.552;
			LEVEL 1 FOR 20.448;
			LEVEL 0 FOR 8.438;
			LEVEL 1 FOR 11.562;
			LEVEL 0 FOR 9.552;
			LEVEL 1 FOR 60.785;
			LEVEL 0 FOR 10.071;
			LEVEL 1 FOR 0.897;
			LEVEL 0 FOR 9.658;
			LEVEL 1 FOR 0.66;
			LEVEL 0 FOR 9.232;
			LEVEL 1 FOR 0.287;
			LEVEL 0 FOR 10.924;
			LEVEL 1 FOR 0.945;
			LEVEL 0 FOR 7.397;
			LEVEL 1 FOR 10.49;
			LEVEL 0 FOR 0.38;
			LEVEL 1 FOR 0.287;
			LEVEL 0 FOR 9.181;
			LEVEL 1 FOR 1.35;
			LEVEL 0 FOR 8.312;
			LEVEL 1 FOR 1.215;
			LEVEL 0 FOR 9.232;
			LEVEL 1 FOR 1.241;
			LEVEL 0 FOR 0.286;
			LEVEL 1 FOR 18.069;
			LEVEL 0 FOR 11.107;
			LEVEL 1 FOR 10.065;
			LEVEL 0 FOR 9.505;
			LEVEL 1 FOR 1.254;
			LEVEL 0 FOR 9.211;
			LEVEL 1 FOR 1.418;
			LEVEL 0 FOR 8.294;
			LEVEL 1 FOR 0.253;
			LEVEL 0 FOR 0.38;
			LEVEL 1 FOR 8.682;
			LEVEL 0 FOR 0.228;
			LEVEL 1 FOR 0.113;
			LEVEL 0 FOR 0.213;
			LEVEL 1 FOR 0.128;
			LEVEL 0 FOR 0.198;
			LEVEL 1 FOR 0.143;
			LEVEL 0 FOR 0.183;
			LEVEL 1 FOR 0.158;
			LEVEL 0 FOR 0.168;
			LEVEL 1 FOR 0.173;
			LEVEL 0 FOR 0.153;
			LEVEL 1 FOR 0.188;
			LEVEL 0 FOR 0.138;
			LEVEL 1 FOR 0.203;
			LEVEL 0 FOR 0.123;
			LEVEL 1 FOR 0.218;
			LEVEL 0 FOR 0.108;
			LEVEL 1 FOR 0.233;
			LEVEL 0 FOR 0.093;
			LEVEL 1 FOR 0.248;
			LEVEL 0 FOR 0.078;
			LEVEL 1 FOR 0.263;
			LEVEL 0 FOR 0.063;
			LEVEL 1 FOR 0.278;
			LEVEL 0 FOR 0.048;
			LEVEL 1 FOR 155.121;
		}
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.707;
			LEVEL X FOR 44.906;
			LEVEL 1 FOR 0.34;
			LEVEL 0 FOR 0.83;
			LEVEL 1 FOR 0.34;
			LEVEL 0 FOR 0.267;
			LEVEL 1 FOR 0.578;
			LEVEL 0 FOR 0.331;
			LEVEL 1 FOR 0.34;
			LEVEL 0 FOR 9.692;
			LEVEL 1 FOR 0.068;
			LEVEL 0 FOR 0.643;
			LEVEL 1 FOR 1.573;
			LEVEL 0 FOR 7.326;
			LEVEL 1 FOR 1.768;
			LEVEL 0 FOR 10.369;
			LEVEL 1 FOR 8.321;
			LEVEL 0 FOR 2.006;
			LEVEL 1 FOR 7.563;
			LEVEL 0 FOR 0.331;
			LEVEL 1 FOR 0.714;
			LEVEL 0 FOR 1.065;
			LEVEL 1 FOR 8.321;
			LEVEL 0 FOR 2.006;
			LEVEL 1 FOR 8.104;
			LEVEL 0 FOR 0.218;
			LEVEL 1 FOR 0.126;
			LEVEL 0 FOR 9.478;
			LEVEL 1 FOR 10.441;
			LEVEL 0 FOR 1.306;
			LEVEL 1 FOR 7.89;
			LEVEL 0 FOR 1.074;
			LEVEL 1 FOR 0.34;
			LEVEL 0 FOR 8.99;
			LEVEL 1 FOR 9.596;
			LEVEL 0 FOR 0.331;
			LEVEL 1 FOR 0.714;
			LEVEL 0 FOR 9.714;
			LEVEL 1 FOR 19.241;
			LEVEL 0 FOR 0.759;
			LEVEL 1 FOR 39.122;
			LEVEL 0 FOR 47.214;
			LEVEL 1 FOR 10.448;
			LEVEL 0 FOR 9.552;
			LEVEL 1 FOR 10.448;
			LEVEL 0 FOR 9.552;
			LEVEL 1 FOR 12.158;
			LEVEL 0 FOR 27.842;
			LEVEL 1 FOR 2.158;
			LEVEL 0 FOR 9.562;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 10.398;
			LEVEL 1 FOR 29.602;
			LEVEL 0 FOR 20.398;
			LEVEL 1 FOR 9.602;
			LEVEL 0 FOR 10.398;
			LEVEL 1 FOR 38.31;
			LEVEL 0 FOR 11.272;
			LEVEL 1 FOR 48.728;
			LEVEL 0 FOR 1.272;
			LEVEL 1 FOR 18.728;
			LEVEL 0 FOR 1.272;
			LEVEL 1 FOR 18.728;
			LEVEL 0 FOR 11.272;
			LEVEL 1 FOR 21.055;
			LEVEL 0 FOR 0.148;
			LEVEL 1 FOR 1.471;
			LEVEL 0 FOR 0.127;
			LEVEL 1 FOR 9.659;
			LEVEL 0 FOR 8.698;
			LEVEL 1 FOR 0.568;
			LEVEL 0 FOR 9.863;
			LEVEL 1 FOR 0.871;
			LEVEL 0 FOR 9.489;
			LEVEL 1 FOR 1.825;
			LEVEL 0 FOR 7.384;
			LEVEL 1 FOR 11.987;
			LEVEL 0 FOR 1.145;
			LEVEL 1 FOR 6.895;
			LEVEL 0 FOR 0.764;
			LEVEL 1 FOR 0.281;
			LEVEL 0 FOR 1.543;
			LEVEL 1 FOR 7.843;
			LEVEL 0 FOR 11.528;
			LEVEL 1 FOR 8.444;
			LEVEL 0 FOR 9.57;
			LEVEL 1 FOR 10.836;
			LEVEL 0 FOR 12.296;
			LEVEL 1 FOR 7.298;
			LEVEL 0 FOR 0.302;
			LEVEL 1 FOR 0.912;
			LEVEL 0 FOR 0.331;
			LEVEL 1 FOR 10.641;
			LEVEL 0 FOR 7.815;
			LEVEL 1 FOR 0.34;
			LEVEL 0 FOR 168.288;
		}
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.004;
			LEVEL X FOR 44.771;
			LEVEL 0 FOR 0.62;
			LEVEL 1 FOR 2.306;
			LEVEL 0 FOR 1.209;
			LEVEL 1 FOR 9.12;
			LEVEL 0 FOR 0.321;
			LEVEL 1 FOR 1.609;
			LEVEL 0 FOR 9.057;
			LEVEL 1 FOR 0.408;
			LEVEL 0 FOR 9.002;
			LEVEL 1 FOR 0.55;
			LEVEL 0 FOR 8.575;
			LEVEL 1 FOR 0.836;
			LEVEL 0 FOR 0.97;
			LEVEL 1 FOR 8.496;
			LEVEL 0 FOR 0.096;
			LEVEL 1 FOR 1.027;
			LEVEL 0 FOR 8.575;
			LEVEL 1 FOR 0.836;
			LEVEL 0 FOR 0.97;
			LEVEL 1 FOR 8.496;
			LEVEL 0 FOR 0.096;
			LEVEL 1 FOR 1.104;
			LEVEL 0 FOR 9.373;
			LEVEL 1 FOR 10.55;
			LEVEL 0 FOR 9.374;
			LEVEL 1 FOR 0.439;
			LEVEL 0 FOR 8.762;
			LEVEL 1 FOR 11.873;
			LEVEL 0 FOR 8.127;
			LEVEL 1 FOR 10.478;
			LEVEL 0 FOR 1.893;
			LEVEL 1 FOR 8.096;
			LEVEL 0 FOR 0.891;
			LEVEL 1 FOR 39.701;
			LEVEL 0 FOR 16.929;
			LEVEL 1 FOR 0.725;
			LEVEL 0 FOR 9.601;
			LEVEL 1 FOR 10.399;
			LEVEL 0 FOR 19.601;
			LEVEL 1 FOR 10.154;
			LEVEL 0 FOR 9.846;
			LEVEL 1 FOR 10.154;
			LEVEL 0 FOR 9.52;
			LEVEL 1 FOR 10.725;
			LEVEL 0 FOR 9.601;
			LEVEL 1 FOR 0.154;
			LEVEL 0 FOR 9.52;
			LEVEL 1 FOR 0.725;
			LEVEL 0 FOR 21.033;
			LEVEL 1 FOR 28.584;
			LEVEL 0 FOR 10.367;
			LEVEL 1 FOR 19.633;
			LEVEL 0 FOR 30.367;
			LEVEL 1 FOR 19.633;
			LEVEL 0 FOR 31.122;
			LEVEL 1 FOR 1.061;
			LEVEL 0 FOR 7.475;
			LEVEL 1 FOR 60.48;
			LEVEL 0 FOR 19.52;
			LEVEL 1 FOR 51.439;
			LEVEL 0 FOR 0.294;
			LEVEL 1 FOR 1.657;
			LEVEL 0 FOR 0.458;
			LEVEL 1 FOR 8.642;
			LEVEL 0 FOR 0.47;
			LEVEL 1 FOR 0.439;
			LEVEL 0 FOR 8.613;
			LEVEL 1 FOR 0.302;
			LEVEL 0 FOR 1.534;
			LEVEL 1 FOR 8.642;
			LEVEL 0 FOR 0.47;
			LEVEL 1 FOR 0.439;
			LEVEL 0 FOR 8.613;
			LEVEL 1 FOR 1.903;
			LEVEL 0 FOR 9.438;
			LEVEL 1 FOR 9.495;
			LEVEL 0 FOR 0.47;
			LEVEL 1 FOR 1.561;
			LEVEL 0 FOR 7.531;
			LEVEL 1 FOR 1.505;
			LEVEL 0 FOR 18.097;
			LEVEL 1 FOR 0.836;
			LEVEL 0 FOR 0.47;
			LEVEL 1 FOR 9.172;
			LEVEL 0 FOR 0.863;
			LEVEL 1 FOR 19.695;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 11.031;
			LEVEL 0 FOR 7.563;
			LEVEL 1 FOR 11.473;
			LEVEL 0 FOR 8.097;
			LEVEL 1 FOR 1.395;
			LEVEL 0 FOR 167.053;
		}
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.695;
			LEVEL X FOR 44.921;
			LEVEL 1 FOR 2.535;
			LEVEL 0 FOR 0.179;
			LEVEL 1 FOR 1.61;
			LEVEL 0 FOR 8.599;
			LEVEL 1 FOR 2.042;
			LEVEL 0 FOR 7.552;
			LEVEL 1 FOR 0.317;
			LEVEL 0 FOR 0.741;
			LEVEL 1 FOR 9.567;
			LEVEL 0 FOR 9.781;
			LEVEL 1 FOR 9.612;
			LEVEL 0 FOR 10.388;
			LEVEL 1 FOR 9.612;
			LEVEL 0 FOR 1.04;
			LEVEL 1 FOR 9.567;
			LEVEL 0 FOR 1.831;
			LEVEL 1 FOR 10.327;
			LEVEL 0 FOR 7.623;
			LEVEL 1 FOR 0.878;
			LEVEL 0 FOR 8.716;
			LEVEL 1 FOR 1.094;
			LEVEL 0 FOR 9.312;
			LEVEL 1 FOR 0.101;
			LEVEL 0 FOR 9.493;
			LEVEL 1 FOR 12.448;
			LEVEL 0 FOR 7.958;
			LEVEL 1 FOR 0.101;
			LEVEL 0 FOR 0.082;
			LEVEL 1 FOR 39.107;
			LEVEL 0 FOR 7.389;
			LEVEL 1 FOR 2.379;
			LEVEL 0 FOR 37.621;
			LEVEL 1 FOR 10.401;
			LEVEL 0 FOR 21.536;
			LEVEL 1 FOR 8.464;
			LEVEL 0 FOR 11.536;
			LEVEL 1 FOR 10.442;
			LEVEL 0 FOR 9.558;
			LEVEL 1 FOR 8.464;
			LEVEL 0 FOR 11.536;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 10.41;
			LEVEL 1 FOR 29.59;
			LEVEL 0 FOR 10.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 20.41;
			LEVEL 1 FOR 40.254;
			LEVEL 0 FOR 0.719;
			LEVEL 1 FOR 9.043;
			LEVEL 0 FOR 47.621;
			LEVEL 1 FOR 20.401;
			LEVEL 0 FOR 9.599;
			LEVEL 1 FOR 52.6;
			LEVEL 0 FOR 0.125;
			LEVEL 1 FOR 1.59;
			LEVEL 0 FOR 8.563;
			LEVEL 1 FOR 0.317;
			LEVEL 0 FOR 0.312;
			LEVEL 1 FOR 9.426;
			LEVEL 0 FOR 1.037;
			LEVEL 1 FOR 9.428;
			LEVEL 0 FOR 0.109;
			LEVEL 1 FOR 20.499;
			LEVEL 0 FOR 9.315;
			LEVEL 1 FOR 2.501;
			LEVEL 0 FOR 17.093;
			LEVEL 1 FOR 0.628;
			LEVEL 0 FOR 9.778;
			LEVEL 1 FOR 10.685;
			LEVEL 0 FOR 8.909;
			LEVEL 1 FOR 0.317;
			LEVEL 0 FOR 10.275;
			LEVEL 1 FOR 12.315;
			LEVEL 0 FOR 7.608;
			LEVEL 1 FOR 0.576;
			LEVEL 0 FOR 8.872;
			LEVEL 1 FOR 0.317;
			LEVEL 0 FOR 9.72;
			LEVEL 1 FOR 0.628;
			LEVEL 0 FOR 168.239;
		}
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.325;
			LEVEL X FOR 44.943;
			LEVEL 1 FOR 0.263;
			LEVEL 0 FOR 0.964;
			LEVEL 1 FOR 0.224;
			LEVEL 0 FOR 0.103;
			LEVEL 1 FOR 0.538;
			LEVEL 0 FOR 2.094;
			LEVEL 1 FOR 10.174;
			LEVEL 0 FOR 8.131;
			LEVEL 1 FOR 2.325;
			LEVEL 0 FOR 7.518;
			LEVEL 1 FOR 10.532;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 0.697;
			LEVEL 0 FOR 7.709;
			LEVEL 1 FOR 2.097;
			LEVEL 0 FOR 0.64;
			LEVEL 1 FOR 8.837;
			LEVEL 0 FOR 0.707;
			LEVEL 1 FOR 8.164;
			LEVEL 0 FOR 10.372;
			LEVEL 1 FOR 1.93;
			LEVEL 0 FOR 17.518;
			LEVEL 1 FOR 2.026;
			LEVEL 0 FOR 8.526;
			LEVEL 1 FOR 1.93;
			LEVEL 0 FOR 37.399;
			LEVEL 1 FOR 1.451;
			LEVEL 0 FOR 17.561;
			LEVEL 1 FOR 20.406;
			LEVEL 0 FOR 19.594;
			LEVEL 1 FOR 0.645;
			LEVEL 0 FOR 29.522;
			LEVEL 1 FOR 0.239;
			LEVEL 0 FOR 9.594;
			LEVEL 1 FOR 0.645;
			LEVEL 0 FOR 9.522;
			LEVEL 1 FOR 0.239;
			LEVEL 0 FOR 9.594;
			LEVEL 1 FOR 20.406;
			LEVEL 0 FOR 10.882;
			LEVEL 1 FOR 48.696;
			LEVEL 0 FOR 10.438;
			LEVEL 1 FOR 9.562;
			LEVEL 0 FOR 10.438;
			LEVEL 1 FOR 29.562;
			LEVEL 0 FOR 10.438;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 9.594;
			LEVEL 1 FOR 10.406;
			LEVEL 0 FOR 9.761;
			LEVEL 1 FOR 72.438;
			LEVEL 0 FOR 8.237;
			LEVEL 1 FOR 0.245;
			LEVEL 0 FOR 2.495;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 8.134;
			LEVEL 1 FOR 32.328;
			LEVEL 0 FOR 7.25;
			LEVEL 1 FOR 10.797;
			LEVEL 0 FOR 1.215;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 18.134;
			LEVEL 1 FOR 0.297;
			LEVEL 0 FOR 1.293;
			LEVEL 1 FOR 9.667;
			LEVEL 0 FOR 8.586;
			LEVEL 1 FOR 2.485;
			LEVEL 0 FOR 8.067;
			LEVEL 1 FOR 9.206;
			LEVEL 0 FOR 0.242;
			LEVEL 1 FOR 11.414;
			LEVEL 0 FOR 8.586;
			LEVEL 1 FOR 0.18;
			LEVEL 0 FOR 0.147;
			LEVEL 1 FOR 0.197;
			LEVEL 0 FOR 0.13;
			LEVEL 1 FOR 0.214;
			LEVEL 0 FOR 0.113;
			LEVEL 1 FOR 0.231;
			LEVEL 0 FOR 0.096;
			LEVEL 1 FOR 0.248;
			LEVEL 0 FOR 0.079;
			LEVEL 1 FOR 0.265;
			LEVEL 0 FOR 0.062;
			LEVEL 1 FOR 0.282;
			LEVEL 0 FOR 0.045;
			LEVEL 1 FOR 157.109;
		}
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.327;
			LEVEL X FOR 44.886;
			LEVEL 0 FOR 0.3;
			LEVEL 1 FOR 1.252;
			LEVEL 0 FOR 2.359;
			LEVEL 1 FOR 8.708;
			LEVEL 0 FOR 10.897;
			LEVEL 1 FOR 8.672;
			LEVEL 0 FOR 10.445;
			LEVEL 1 FOR 1.277;
			LEVEL 0 FOR 8.292;
			LEVEL 1 FOR 10.417;
			LEVEL 0 FOR 19.583;
			LEVEL 1 FOR 1.313;
			LEVEL 0 FOR 10.396;
			LEVEL 1 FOR 9.604;
			LEVEL 0 FOR 19.118;
			LEVEL 1 FOR 19.555;
			LEVEL 0 FOR 10.445;
			LEVEL 1 FOR 41.134;
			LEVEL 0 FOR 36.453;
			LEVEL 1 FOR 1.131;
			LEVEL 0 FOR 68.869;
			LEVEL 1 FOR 1.131;
			LEVEL 0 FOR 60.029;
			LEVEL 1 FOR 39.543;
			LEVEL 0 FOR 20.457;
			LEVEL 1 FOR 9.543;
			LEVEL 0 FOR 10.457;
			LEVEL 1 FOR 9.543;
			LEVEL 0 FOR 10.457;
			LEVEL 1 FOR 20.841;
			LEVEL 0 FOR 0.711;
			LEVEL 1 FOR 8.419;
			LEVEL 0 FOR 8.869;
			LEVEL 1 FOR 11.131;
			LEVEL 0 FOR 8.869;
			LEVEL 1 FOR 10.387;
			LEVEL 0 FOR 9.613;
			LEVEL 1 FOR 21.131;
			LEVEL 0 FOR 19.601;
			LEVEL 1 FOR 51.236;
			LEVEL 0 FOR 1.746;
			LEVEL 1 FOR 28.685;
			LEVEL 0 FOR 19.583;
			LEVEL 1 FOR 11.29;
			LEVEL 0 FOR 9.141;
			LEVEL 1 FOR 1.3;
			LEVEL 0 FOR 8.269;
			LEVEL 1 FOR 1.29;
			LEVEL 0 FOR 19.141;
			LEVEL 1 FOR 1.3;
			LEVEL 0 FOR 9.56;
			LEVEL 1 FOR 8.695;
			LEVEL 0 FOR 10.445;
			LEVEL 1 FOR 9.555;
			LEVEL 0 FOR 1.746;
			LEVEL 1 FOR 8.685;
			LEVEL 0 FOR 0.874;
			LEVEL 1 FOR 8.695;
			LEVEL 0 FOR 0.409;
			LEVEL 1 FOR 0.086;
			LEVEL 0 FOR 0.242;
			LEVEL 1 FOR 0.102;
			LEVEL 0 FOR 0.226;
			LEVEL 1 FOR 0.118;
			LEVEL 0 FOR 0.21;
			LEVEL 1 FOR 0.134;
			LEVEL 0 FOR 0.194;
			LEVEL 1 FOR 0.15;
			LEVEL 0 FOR 0.178;
			LEVEL 1 FOR 0.166;
			LEVEL 0 FOR 0.162;
			LEVEL 1 FOR 0.182;
			LEVEL 0 FOR 0.146;
			LEVEL 1 FOR 0.198;
			LEVEL 0 FOR 0.13;
			LEVEL 1 FOR 0.214;
			LEVEL 0 FOR 0.114;
			LEVEL 1 FOR 0.23;
			LEVEL 0 FOR 0.098;
			LEVEL 1 FOR 0.246;
			LEVEL 0 FOR 0.082;
			LEVEL 1 FOR 0.262;
			LEVEL 0 FOR 0.066;
			LEVEL 1 FOR 155.254;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "accD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "accD[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "accD[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "accD[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "accD[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "accD[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "accD[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "accD[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "accD[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dBus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "dBus[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "en_Add";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "en_And";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "en_Not";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "en_Or";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "en_Sub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 23;
}

TIME_BAR
{
	TIME = 50000;
	MASTER = TRUE;
}
;
